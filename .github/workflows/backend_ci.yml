# week08/.github/workflows/backend_ci.yml

name: Backend CI - Test, Build and Push Images to ACR


on:
  pull_request:
    branches: [ "development" ]
    paths: [ "backend/**" ]
  push:
    branches: [ "development" ]
    paths: [ "backend/**" ]

env:
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  IMAGE_TAG: ${{ github.sha }}

jobs:
  test_and_build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - run: pip install pytest httpx
      - run: pip install -r backend/product_service/requirements.txt
      - run: pytest backend/product_service/tests

      - run: pip install -r backend/order_service/requirements.txt
      - run: pytest backend/order_service/tests

      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

      - run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }} ./backend/product_service
      - run: docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}

      - run: docker build -t ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }} ./backend/order_service
      - run: docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}

      - run: az logout
        if: always()
